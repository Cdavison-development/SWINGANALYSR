# **GOLFANALYSR: A GOLF SWING ANALYSIS AND FEEDBACK SYSTEM**

Credits to William MCnally for GOLFDB, a Swing segmentation system: https://github.com/wmcnally/golfdb

The code in this repository is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.


research paper found at: https://mega.nz/file/ElJj1QYA#RGF2tecRgPFRti779KoFv5_-Q4DBY-DA8-fQDNEZju8


Library requirements:
• openAI
• math
• json
• pytorch
• numpy
• OpenCv
• Mediapipe
• OS
• math
pandas

you should be able to install all dependencies (other than pytorch) without prior setup.

use openai version 0.28

to set up pytorch, it is recommended that you have a CUDA capable GPU, download CUDA 11.8 from : 
https://developer.nvidia.com/cuda-11-8-0-download-archive?target_os=Windows&target_arch=x86_64&target_version=11&target_type=exe_local

you will also need python 3.10.0
https://www.python.org/downloads/release/python-3100/

install pytorch from using pip install torch==2.2.0 torchvision==0.17.0 torchaudio==2.2.0 --index-url https://download.pytorch.org/whl/cu118

using different versions of CUDA/python may work, but this is what worked for me

now that the packages are sorted, we can begin

input gathered amateur golf footage into directory golfdb/VideoData/Amateur-vids, The video should be shot at a down-the-line camera angle, the club used should be a driver.
This footage should be of one individual

download the full professional golf swing repository and extract the full file to golfdb/VideoData/Pro_vids:
https://drive.google.com/file/d/1uBwRxFxW04EqG87VCoX3l6vXeV5T5JYJ/view

you should now have the directory: golfdb\VideoData\Pro_vids\videos_160 , in which all professional golf videos are stored.

run file_deleter.py

This script works by checking the names of videos I have identified as using a down the line golf camera angle, where the footage is sped up,
and the golfer is using the driver club. If you wanted to use different parameters, you would have to go through the unchanged golfDB 
professional golf video dataset, and list the videos you do not want to delete in the same format as in data/filenames.csv

so now, Pro_vids/videos_160 should only contain videos with the footage we want to keep, as specified in data/filenames.csv

if the file "models" is empty, download model weights from https://drive.google.com/file/d/1MBIDwHSM8OKRbxS8YfyRLnUBAdt0nupW/view 
(this maybe the case as I am unsure of github max upload sizes atm) 

run both AmateurSegmentation and ProfessionalSegmentation

the folders within the "ImageData" folder should now have images for each moment of swing for both the amateur and professional videosets.

go to the Pose_estimation folder in the root directory

Run both “AmateurKeypointToJson.py” and “ProfessionalKeypointToJson.py”, this will store the
keypoint data in respective Json Files.

Since the goal of this system is to compare one amateur to many professionals, the AmateurKeyPointData will return individual keypoint, while the 
ProfessionalKeypointData will be have multiple jsons for each moment of swing, for each professional

also, sometimes AmateurKeypointToJson will not create the files, but instead request a file path, unsure why this happens

Run JsonComparison, this will find the 3 professionals that have the closest swing to the amateur, for ease of comparison.

Run JsonAvg
This function finds the mean of these 3 professionals and this data is what is compared to our amateur keypoint data to find the feedback

Go to the root directory and run “feedback.py” to return feedback data.


If you want to use another test subject, you will need to run "amateurCleaner.py", all data relating to the amateur individual will be deleted.

If you want to change the comparison data, then you should use "ProfessionalCleaner.py", however this shouldnt be too necassary unless you want to
use a different video dataset.




